services:
  train:
    build: ./train
    container_name: train_service
    ports:
      - "5000:5000"
    networks:
      - micro_train_network
    depends_on:
      - redis

  gatekeeper:
    build: ./gatekeeper
    container_name: gatekeeper_service
    ports:
      - "5001:5001"
    networks:
      - micro_train_network
    volumes:
      - ./gatekeeper:/app
    depends_on:
      - train

  central:
    build: ./central
    container_name: central_service
    ports:
      - "5002:5002"
    networks:
      - micro_train_network
    depends_on:
      - redis
      - train
      - gatekeeper
    volumes:
      - ./central/logs:/app/logs


  redis:
    image: "redis:alpine"
    container_name: redis_service
    ports:
      - "6379:6379"
    networks:
      - micro_train_network

  celery_worker:
    build:
      context: ./train
      dockerfile: Dockerfile
    command: celery -A app.celery worker --loglevel=info
    container_name: celery_worker
    networks:
      - micro_train_network
    depends_on:
      - redis

  celery_beat:
    build:
      context: ./train
      dockerfile: Dockerfile
    command: celery -A app.celery beat --loglevel=info
    container_name: celery_beat
    networks:
      - micro_train_network
    depends_on:
      - redis

  flake8:
    build:
      context: .
      dockerfile: Dockerfile.lint
    command: [ "flake8", "./train", "./central", "./gatekeeper" ]
    volumes:
      - .:/app
    networks:
      - micro_train_network

  black:
    build:
      context: .
      dockerfile: Dockerfile.lint
    command: [ "black", "--line-length", "79", "./train", "./central", "./gatekeeper" ]
    volumes:
      - .:/app
    networks:
      - micro_train_network

  test_train:
    build: ./train
    container_name: test_service
    networks:
      - micro_train_network
    depends_on:
      - redis
    command: [ "pytest", "train/tests", "--maxfail=1", "--disable-warnings" ]
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app/train

  test_central:
    build: ./central
    networks:
      - micro_train_network
    depends_on:
      - redis
      - gatekeeper
    command: [ "pytest", "central/tests", "--maxfail=1", "--disable-warnings" ]
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app/central

  test_gatekeeper:
    build: ./gatekeeper
    networks:
      - micro_train_network
    depends_on:
      - redis
    command: [ "pytest", "gatekeeper/tests", "--maxfail=1", "--disable-warnings" ]
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app/gatekeeper


networks:
  micro_train_network:
    driver: bridge
